-- Avery Cloud Stand GUI Script with Hotkey
-- LocalScript in StarterPlayer > StarterPlayerScripts

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")
local UserInputService = game:GetService("UserInputService")
local player = Players.LocalPlayer

-- Folder for local collision platforms
local cloudFolder = Instance.new("Folder")
cloudFolder.Name = "LocalCloudPlatforms"
cloudFolder.Parent = Workspace

-- Settings
local transparency = 1 -- 1 = invisible
local platformPrefix = "LocalCloudPlatform__"
local platformThickness = 1 -- thin collision sheet

-- Store cloud-to-platform pairs
local cloudPlatforms = {}

local function isCloudPart(part)
	if not part:IsA("BasePart") then return false end
	return string.find(string.lower(part.Name), "cloud") ~= nil
end

local function createPlatform(cloudPart)
	if cloudPlatforms[cloudPart] then return end
	local platform = Instance.new("Part")
	platform.Name = platformPrefix .. cloudPart:GetDebugId()
	platform.Anchored = true
	platform.CanCollide = true
	platform.Transparency = transparency
	platform.CastShadow = false
	platform.Parent = cloudFolder
	cloudPlatforms[cloudPart] = platform
end

local function removePlatform(cloudPart)
	local platform = cloudPlatforms[cloudPart]
	if platform then
		platform:Destroy()
		cloudPlatforms[cloudPart] = nil
	end
end

-- Initial scan
for _, obj in Workspace:GetDescendants() do
	if isCloudPart(obj) then
		createPlatform(obj)
	end
end

-- Watch for new clouds
Workspace.DescendantAdded:Connect(function(desc)
	if isCloudPart(desc) then
		createPlatform(desc)
	end
end)

Workspace.DescendantRemoving:Connect(function(desc)
	if cloudPlatforms[desc] then
		removePlatform(desc)
	end
end)

-- GUI
local ScreenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
ScreenGui.Name = "AveryCloudGUI"

local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, 220, 0, 100)
MainFrame.Position = UDim2.new(0.5, -110, 0.5, -50)
MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
MainFrame.Parent = ScreenGui
MainFrame.Active = true

-- Dragging
local dragging, dragInput, dragStart, startPos

local function update(input)
	local delta = input.Position - dragStart
	MainFrame.Position = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
end

MainFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = MainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

MainFrame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Title
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
Title.Text = "Cloud Stand"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Parent = MainFrame

-- Close Button
local CloseBtn = Instance.new("TextButton")
CloseBtn.Size = UDim2.new(0, 25, 0, 25)
CloseBtn.Position = UDim2.new(1, -30, 0, 2)
CloseBtn.Text = "X"
CloseBtn.TextColor3 = Color3.fromRGB(255, 0, 0)
CloseBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
CloseBtn.Parent = MainFrame
CloseBtn.MouseButton1Click:Connect(function()
	ScreenGui.Enabled = false
end)

-- Minimize Button
local MinBtn = Instance.new("TextButton")
MinBtn.Size = UDim2.new(0, 25, 0, 25)
MinBtn.Position = UDim2.new(1, -60, 0, 2)
MinBtn.Text = "_"
MinBtn.TextColor3 = Color3.fromRGB(0, 255, 0)
MinBtn.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
MinBtn.Parent = MainFrame

local minimized = false
MinBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	for i, child in pairs(MainFrame:GetChildren()) do
		if child ~= Title and child ~= CloseBtn and child ~= MinBtn then
			child.Visible = not minimized
		end
	end
end)

-- Cloud Stand Toggle Button
local ToggleBtn = Instance.new("TextButton")
ToggleBtn.Size = UDim2.new(1, -10, 0, 40)
ToggleBtn.Position = UDim2.new(0, 5, 0, 40)
ToggleBtn.Text = "Enable Cloud Stand"
ToggleBtn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
ToggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleBtn.Parent = MainFrame

local cloudEnabled = false
ToggleBtn.MouseButton1Click:Connect(function()
	cloudEnabled = not cloudEnabled
	if cloudEnabled then
		ToggleBtn.Text = "Disable Cloud Stand"
		print("[CloudStand] Enabled!")
	else
		ToggleBtn.Text = "Enable Cloud Stand"
		print("[CloudStand] Disabled!")
	end
end)

-- Hotkey to show/hide GUI (RightControl by default)
UserInputService.InputBegan:Connect(function(input, processed)
	if processed then return end
	if input.KeyCode == Enum.KeyCode.RightControl then
		ScreenGui.Enabled = not ScreenGui.Enabled
	end
end)

-- Cloud Stand update loop
RunService.RenderStepped:Connect(function()
	if not cloudEnabled then return end
	for cloudPart, platform in pairs(cloudPlatforms) do
		if not cloudPart or not cloudPart.Parent then
			removePlatform(cloudPart)
		else
			platform.Size = Vector3.new(cloudPart.Size.X, platformThickness, cloudPart.Size.Z)
			local offsetY = (cloudPart.Size.Y / 2) + (platform.Size.Y / 2)
			platform.CFrame = cloudPart.CFrame * CFrame.new(0, offsetY, 0)
		end
	end
end)

print("[AveryCloudStand] GUI Loaded! Drag, Minimize, Close, Toggle & Hotkey Ready!")
