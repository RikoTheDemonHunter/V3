local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")

-- URLs
local url = "https://raw.githubusercontent.com/RikoTheDemonHunter/V3/refs/heads/main/switcher.json"
local banlistUrl = "https://raw.githubusercontent.com/RikoTheDemonHunter/V3/refs/heads/main/Banlist.json"

-- Ban & Whitelist checks
local function isBanned(userId, banlist)
	for _, id in ipairs(banlist) do
		if id == userId then return true end
	end
	return false
end

local function isWhitelisted(userId, whitelist)
	for _, id in ipairs(whitelist) do
		if id == userId then return true end
	end
	return false
end

local banSuccess, banData = pcall(function()
	return HttpService:JSONDecode(game:HttpGet(banlistUrl, true))
end)

if banSuccess and banData then
	if isBanned(player.UserId, banData.banned or {}) then
		player:Kick("üö´ You are permanently banned from using this script.")
		return
	end
else
	warn("‚ö†Ô∏è Could not fetch banlist.")
end

local success, result = pcall(function()
	return HttpService:JSONDecode(game:HttpGet(url, true))
end)

local enabled, whitelist = true, {}
if success and result then
	enabled = result.enabled
	whitelist = result.whitelist or {}
	if not enabled and not isWhitelisted(player.UserId, whitelist) then
		player:Kick("Your UserID is not whitelisted.")
		return
	end
else
	warn("‚ö†Ô∏è Failed to fetch kill switch status.")
end

-- Secondary kill switch check
if not enabled then
	local retrySuccess, retryResult = pcall(function()
		return HttpService:JSONDecode(game:HttpGet(url, true))
	end)
	if retrySuccess and retryResult then
		if not isWhitelisted(player.UserId, retryResult.whitelist or {}) then
			player:Kick("‚ö†Ô∏è Unauthorized user detected.")
			return
		end
	end
end

-- Exploit trap
local trapRemote = ReplicatedStorage:WaitForChild("ExploitTrap", 1)
if trapRemote then trapRemote:FireServer() end

-- GUI
local DarkLib = Instance.new("ScreenGui")
DarkLib.Name = "DarkLib"
DarkLib.Parent = game.CoreGui
DarkLib.ResetOnSpawn = false

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
Main.Position = UDim2.new(0.367, 0, 0.264, 0)
Main.Size = UDim2.new(0, 382, 0, 219)
Main.Parent = DarkLib

-- Drag & Drop Logic
local dragging, dragInput, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	local newPos = UDim2.new(
		startPos.X.Scale, startPos.X.Offset + delta.X,
		startPos.Y.Scale, startPos.Y.Offset + delta.Y
	)
	local tween = TweenService:Create(Main, TweenInfo.new(0.1, Enum.EasingStyle.Sine, Enum.EasingDirection.InOut), {Position = newPos})
	tween:Play()
end

Main.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = Main.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

Main.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then
		update(input)
	end
end)

-- Close button
local closeButton = Instance.new("TextButton")
closeButton.Size = UDim2.new(0, 25, 0, 25)
closeButton.Position = UDim2.new(1, -30, 0, 5)
closeButton.Text = "X"
closeButton.BackgroundColor3 = Color3.fromRGB(255, 50, 50)
closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
closeButton.Parent = Main
closeButton.MouseButton1Click:Connect(function()
	Main:Destroy()
end)

-- Tabs & Sections setup
local function createTab(name)
	local btn = Instance.new("TextButton")
	btn.Text = name
	btn.Size = UDim2.new(0, 70, 0, 30)
	btn.Font = Enum.Font.Highway
	btn.TextColor3 = Color3.fromRGB(0, 255, 0)
	btn.TextScaled = true
	btn.Parent = Main
	return btn
end

-- Example AutoDrink Toggle
local function autoDrinkLoop()
	spawn(function()
		while wait(2.4) do
			local drinks = {"Starter Drink","Second Drink","Third Drink","Fourth Drink","Fifth Drink",
							"Sixth Drink","Seventh Drink","Eighth Drink","Ninth Drink","Atomic Drink",
							"Omega Burp Juice","Thunder Fizz","Garlic Juice"}
			for _, drink in ipairs(drinks) do
				ReplicatedStorage.RemoteEvents.DrinkEvent:FireServer(drink)
			end
		end
	end)
end

-- Add more buttons/toggles as needed, following the pattern above
-- Teleports, LocalPlayer functions, Misc, Scripts, Credits can be added similarly

-- Quick toggle example
local autoDrinkButton = Instance.new("TextButton")
autoDrinkButton.Size = UDim2.new(0, 120, 0, 40)
autoDrinkButton.Position = UDim2.new(0, 20, 0, 50)
autoDrinkButton.Text = "Auto Drink"
autoDrinkButton.TextColor3 = Color3.fromRGB(0, 255, 0)
autoDrinkButton.TextScaled = true
autoDrinkButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
autoDrinkButton.Parent = Main
local toggled = false
autoDrinkButton.MouseButton1Click:Connect(function()
	toggled = not toggled
	if toggled then
		autoDrinkLoop()
	end
end)
