-- Avery's SafeZone Full Script with Smooth Color Cycle
repeat task.wait() until game:IsLoaded()

local Players = game:GetService("Players")
local player = Players.LocalPlayer

local safeZoneFolder = nil
local running = false
local safeZoneParts = {}

-- Smooth slower color cycle
local function cycleColor()
	while running do
		for hue=0,1,0.001 do  -- slower increment
			local color = Color3.fromHSV(hue,0.7,1)  -- slightly less saturated
			for _,part in pairs(safeZoneParts) do
				if part:IsA("Part") then
					part.Color = color
				end
			end
			task.wait(0.05)  -- slower refresh
		end
	end
end

-- Create SafeZone
local function createSafeZone()
	if safeZoneFolder then return end
	safeZoneFolder = Instance.new("Folder")
	safeZoneFolder.Name = "SafeZone"
	safeZoneFolder.Parent = workspace

	local cubeSize = 600
	local cubeHeight = 100
	local yPos = 3600 -- Raised Y position
	local wallThickness = 20
	local entranceWidth = 100

	-- Floor
	local floor = Instance.new("Part")
	floor.Size = Vector3.new(cubeSize,10,cubeSize)
	floor.Position = Vector3.new(0,yPos+5,0)
	floor.Anchored = true
	floor.Material = Enum.Material.SmoothPlastic
	floor.Transparency = 0.5
	floor.Reflectance = 0.2
	floor.Name = "Floor"
	floor.Parent = safeZoneFolder
	table.insert(safeZoneParts,floor)

	-- Walls function
	local function createWall(position,size,orientation)
		local wall = Instance.new("Part")
		wall.Size = size
		wall.Position = position
		wall.Anchored = true
		wall.Material = Enum.Material.SmoothPlastic
		wall.Transparency = 0.4
		if orientation then wall.Orientation = orientation end
		wall.Parent = safeZoneFolder
		table.insert(safeZoneParts,wall)
		return wall
	end

	-- Side walls
	createWall(Vector3.new(-cubeSize/2,yPos+cubeHeight/2,0),Vector3.new(wallThickness,cubeHeight,cubeSize)) -- left
	createWall(Vector3.new(cubeSize/2,yPos+cubeHeight/2,0),Vector3.new(wallThickness,cubeHeight,cubeSize))  -- right
	createWall(Vector3.new(0,yPos+cubeHeight/2,cubeSize/2),Vector3.new(cubeSize,cubeHeight,wallThickness)) -- back

	-- Front wall split for entrance
	local frontLeft = Instance.new("Part")
	frontLeft.Size = Vector3.new((cubeSize-entranceWidth)/2,cubeHeight,wallThickness)
	frontLeft.Position = Vector3.new(-(cubeSize-entranceWidth)/4 - entranceWidth/2,yPos+cubeHeight/2,-cubeSize/2)
	frontLeft.Anchored = true
	frontLeft.Material = Enum.Material.SmoothPlastic
	frontLeft.Transparency = 0.4
	frontLeft.Parent = safeZoneFolder
	table.insert(safeZoneParts,frontLeft)

	local frontRight = Instance.new("Part")
	frontRight.Size = Vector3.new((cubeSize-entranceWidth)/2,cubeHeight,wallThickness)
	frontRight.Position = Vector3.new((cubeSize-entranceWidth)/4 + entranceWidth/2,yPos+cubeHeight/2,-cubeSize/2)
	frontRight.Anchored = true
	frontRight.Material = Enum.Material.SmoothPlastic
	frontRight.Transparency = 0.4
	frontRight.Parent = safeZoneFolder
	table.insert(safeZoneParts,frontRight)

	-- Path
	local pathWidth = 100
	local pathLength = 300
	local path = Instance.new("Part")
	path.Size = Vector3.new(pathWidth,10,pathLength)
	path.Position = Vector3.new(0,yPos+5,-cubeSize/2 - pathLength/2)
	path.Anchored = true
	path.Material = Enum.Material.Concrete
	path.BrickColor = BrickColor.new("Medium stone grey")
	path.Parent = safeZoneFolder

	-- Wide Baseplate
	local baseplateWidth = 800
	local baseplateDepth = 600
	local baseplate = Instance.new("Part")
	baseplate.Size = Vector3.new(baseplateWidth,10,baseplateDepth)
	baseplate.Position = Vector3.new(0,yPos-5,-cubeSize/2 - pathLength - baseplateDepth/2)
	baseplate.Anchored = true
	baseplate.Material = Enum.Material.Grass
	baseplate.BrickColor = BrickColor.new("Bright green")
	baseplate.Parent = safeZoneFolder

	-- Floating "Made by Avery" sign on the grass baseplate
	local signPart = Instance.new("Part")
	signPart.Size = Vector3.new(200,50,5)
	signPart.Position = Vector3.new(0,yPos+60,-cubeSize/2 - pathLength - baseplateDepth/2)
	signPart.Anchored = true
	signPart.Material = Enum.Material.SmoothPlastic
	signPart.BrickColor = BrickColor.new("Bright pink")
	signPart.Parent = safeZoneFolder

	local billboard = Instance.new("BillboardGui")
	billboard.Size = UDim2.new(0,200,0,50)
	billboard.AlwaysOnTop = true
	billboard.Adornee = signPart
	billboard.Parent = signPart

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1,0,1,0)
	label.BackgroundTransparency = 1
	label.Text = "Made by Avery"
	label.TextScaled = true
	label.Font = Enum.Font.GothamBold
	label.TextColor3 = Color3.fromRGB(255,20,147)
	label.Parent = billboard

	-- Avatar Statue (Safe)
	local function spawnStatue()
		local character = player.Character or player.CharacterAdded:Wait()
		if not character.PrimaryPart then
			character:WaitForChild("HumanoidRootPart")
		end

		local statue = Instance.new("Model")
		statue.Name = "AvatarStatue"

		for _,part in pairs(character:GetDescendants()) do
			if part:IsA("BasePart") then
				local clone = part:Clone()
				clone.Anchored = true
				clone.Material = Enum.Material.SmoothPlastic
				clone.Reflectance = 0.3
				clone.Parent = statue
			end
		end

		if statue:FindFirstChild("HumanoidRootPart") then
			statue:SetPrimaryPartCFrame(CFrame.new(0,yPos+15,-cubeSize/2 - pathLength - baseplateDepth/2))
		end
		statue.Parent = safeZoneFolder
	end

	spawnStatue()
end

-- Remove SafeZone
local function removeSafeZone()
	if safeZoneFolder and safeZoneFolder.Parent then
		safeZoneFolder:Destroy()
		safeZoneFolder = nil
		safeZoneParts = {}
	end
end

-- GUI Toggle Button
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "SafeZoneGui"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local toggleButton = Instance.new("TextButton")
toggleButton.Size = UDim2.new(0,160,0,50)
toggleButton.Position = UDim2.new(0.05,0,0.2,0)
toggleButton.Text = "Toggle SafeZone"
toggleButton.BackgroundColor3 = Color3.fromRGB(30,30,30)
toggleButton.TextColor3 = Color3.fromRGB(255,255,255)
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextSize = 20
toggleButton.Draggable = true
toggleButton.Active = true
toggleButton.Parent = screenGui

toggleButton.MouseButton1Click:Connect(function()
	if running then
		removeSafeZone()
	else
		createSafeZone()
		task.spawn(cycleColor)
	end
	running = not running
end)
